<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnFermer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAAdxJREFUeF7t
        3c1Kw0AUhuHoZdjES3GlLgU37cSrEfwFQXSreFFJbkUUpVAzcCohjHQ2OfmQ94GzCJls8jIt1ZQWAAAA
        AAAAAIAdujKcb4pizw4xl01xud+Vq9e2DJt+3uKxnYK3UYztEGUOf8QgylzaKjwmQvxOV9ZPthRT2rEz
        tvPeVssjuwRTIYaQGKO/2S+jmz8eYngghhBiCCGGkMwYH+3B8tguwVRyY3SH9YldgqkQQwgxhBBDSPw/
        Rn+ziaGAGEKIIYQYQoghhBhCiCGEGEKIIYQYQoghhBhCsmNUq1O7BFMhhhBiCCGGkMwYn8RwQAwxTRke
        EgGG89VU4cyWYyrsDDHsDCHxCZGMrwUQxFN8yep3yXMixHDW/VzYJZha5rNU7BRP7BRBRBEUo8Rvvo4i
        jIconogiiCiCiCKqv+H3gwCpWTdVXdtyeGjL+i4RYjhE8UYUQUQRRBRBRBFEFEFNFW4TIYZDFG9EEUQU
        QUQRlBdlFWw5PHRVuEmEGA5RvBFFEFEEEUUQUQRlRPmOP1Vhy+GhW9TXiRDDIYo3oggiiiCiCCKKmJzn
        vuJ5Ww4v7SJcpWLEP1TaEngbR4mfW+wU5rKNQgwh8U08vrfYIQAAAAAAAAD8F0XxA4XlBqlr5DvyAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHoSURBVGhD7Zm9TsMwFIUzwQZPwAYSFR0qgeAdQGxkIf9Ltr4CA78v1I2BDh0Rz1IJsXMOukZt
        aNOkdp0a+ZOu7Gv75p4a105N4PF4tpwkSfp5nidZlpW2TPKdiIR2IPgJwV+wCezVojEf8z6KlGZghnsI
        +ozj+FCarIIJO2J+lMfStBoERLCJuJ3A/BB9K+5qMDhH0Ju4QVEUB2mang+Hw110XbONZRiGO/irXLDf
        1Bi2EeZHXy7uajh4VjQeeAY/LctyH0nv2Qb/gT7bYaemxrCNoK4nmjMRRdGeuBuBz2cecfVFo34FexZ3
        I2DmX5D2Ulx90V2gLRr1xjONcSPYdMZG0lWL8Zlus6YROkbsHcqBlGPpqsX4mlbfenFroUiVjCVoJJrP
        h5nbPdT+Km4tFKmSsQSNRBvfp50U7eTyWPRFRP+IgqqG9inKX9HiLxo3t6tYOVzgczvj7vAH9XbIUprm
        YBzjfx4kWDlcmBTDBuK2gnFV0VW0RaPu3kw7uab94bIEf7iQf3O4LIMiEdv9Wx7q7r1Pd4G2aNTd+43Y
        Zk2vy8YOF907jSZj2EZQ1xOt9umtvmFCgHt3efjUPQS5dWtKEKDupz9g7xaN+drfTysw432swRt8gNCW
        MR8Er/efAI/HY4sg+AZjJGP/qbShhQAAAABJRU5ErkJggg==
</value>
  </data>
</root>